{"version":3,"file":"584.js","mappings":"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","sources":["webpack://@lenna-proj/lenna-web/./src/components/ImagePreview.vue?01bf","webpack://@lenna-proj/lenna-web/./src/components/ImageUploadPreview.vue?39cf","webpack://@lenna-proj/lenna-web/./src/views/Batch.vue?0839","webpack://@lenna-proj/lenna-web/./src/views/Home.vue?58e5","webpack://@lenna-proj/lenna-web/./src/bootstrap.ts","webpack://@lenna-proj/lenna-web/./src/controllers/plugin_manager.ts","webpack://@lenna-proj/lenna-web/./src/controllers/processor.ts","webpack://@lenna-proj/lenna-web/./src/controllers/storage.ts","webpack://@lenna-proj/lenna-web/./src/router.ts","webpack://@lenna-proj/lenna-web/./src/assets/banner.png","webpack://@lenna-proj/lenna-web/./src/components/Navbar.vue","webpack://@lenna-proj/lenna-web/./src/components/Navbar.vue?fb62","webpack://@lenna-proj/lenna-web/./src/components/Navbar.vue?75b5","webpack://@lenna-proj/lenna-web/./src/components/Footer.vue","webpack://@lenna-proj/lenna-web/./src/components/Footer.vue?ff87","webpack://@lenna-proj/lenna-web/./src/components/Footer.vue?162e","webpack://@lenna-proj/lenna-web/./src/App.vue","webpack://@lenna-proj/lenna-web/./src/App.vue?3b2b","webpack://@lenna-proj/lenna-web/./src/components/ConfigComp.vue","webpack://@lenna-proj/lenna-web/./src/components/ConfigComp.vue?e61b","webpack://@lenna-proj/lenna-web/./src/controllers/config_generator.ts","webpack://@lenna-proj/lenna-web/./src/components/ConfigComp.vue?146c","webpack://@lenna-proj/lenna-web/./src/components/Help.vue","webpack://@lenna-proj/lenna-web/./src/components/Help.vue?ed81","webpack://@lenna-proj/lenna-web/./src/components/ImagePreview.vue?da5e","webpack://@lenna-proj/lenna-web/./src/components/ImageUpload.vue","webpack://@lenna-proj/lenna-web/./src/components/ImageUpload.vue?d272","webpack://@lenna-proj/lenna-web/./src/components/ImageUpload.vue?4182","webpack://@lenna-proj/lenna-web/./src/components/ImageUploadPreview.vue?ef84","webpack://@lenna-proj/lenna-web/./src/components/PluginsManager.vue","webpack://@lenna-proj/lenna-web/./src/components/Plugin.vue","webpack://@lenna-proj/lenna-web/./src/components/PluginConfig.vue","webpack://@lenna-proj/lenna-web/./src/components/PluginConfig.vue?9bfb","webpack://@lenna-proj/lenna-web/./src/components/PluginConfig.vue?a92a","webpack://@lenna-proj/lenna-web/./src/components/Checkbox.vue","webpack://@lenna-proj/lenna-web/./src/components/Checkbox.vue?3095","webpack://@lenna-proj/lenna-web/./src/components/Checkbox.vue?4fbc","webpack://@lenna-proj/lenna-web/./src/components/Icon.vue?62a3","webpack://@lenna-proj/lenna-web/./src/components/Icon.vue?433b","webpack://@lenna-proj/lenna-web/./src/components/Icon.vue","webpack://@lenna-proj/lenna-web/./src/components/Plugin.vue?f390","webpack://@lenna-proj/lenna-web/./src/components/Plugin.vue?1d89","webpack://@lenna-proj/lenna-web/./src/components/PluginsManager.vue?d84f","webpack://@lenna-proj/lenna-web/./src/components/PluginsManager.vue?4be4","webpack://@lenna-proj/lenna-web/./src/views/About.vue","webpack://@lenna-proj/lenna-web/./src/views/About.vue?99e7","webpack://@lenna-proj/lenna-web/./src/views/About.vue?b54e","webpack://@lenna-proj/lenna-web/./src/views/Batch.vue?1a2b","webpack://@lenna-proj/lenna-web/./src/views/Home.vue?caea","webpack://@lenna-proj/lenna-web/./src/components/ImagePreview.vue","webpack://@lenna-proj/lenna-web/./src/components/ImageUploadPreview.vue","webpack://@lenna-proj/lenna-web/./src/views/Batch.vue","webpack://@lenna-proj/lenna-web/./src/views/Home.vue"],"sourcesContent":["\nimport { defineComponent } from \"vue\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { useToast } from \"vue-toastification\";\nimport { convert } from \"@lenna-proj/lenna-cli\";\nimport { ImageSource } from \"../models/image\";\n\ndeclare interface FileOption {\n  text: string;\n  value: string;\n}\n\ndeclare interface ImagePreviewData {\n  imgs: string[];\n  visible: boolean;\n  index: number;\n  filetype: string;\n  options: Array<FileOption>;\n}\n\nexport default defineComponent({\n  components: {\n    VueEasyLightbox,\n  },\n  props: {\n    images: {\n      type: Array as () => Array<ImageSource>,\n      required: true,\n    },\n  },\n  data(): ImagePreviewData {\n    return {\n      imgs: [],\n      visible: false,\n      index: 0,\n      filetype: \"png\",\n      options: [\n        { text: \"png\", value: \"png\" },\n        { text: \"jpg\", value: \"jpg\" },\n        { text: \"bmp\", value: \"bmp\" },\n        { text: \"ico\", value: \"ico\" },\n        { text: \"gif\", value: \"gif\" },\n      ],\n    };\n  },\n  methods: {\n    createObjectURL(image: ImageSource) {\n      return URL.createObjectURL(image);\n    },\n    async safeImage(file: any, format: string) {\n      let data = await file\n        .arrayBuffer()\n        .then((image: any) => new Uint8Array(image));\n      return convert(data, format);\n    },\n    async downloadZip() {\n      let zip = new JSZip();\n      const toast = useToast();\n      const imageCount = this.images.length;\n      if (imageCount < 1) {\n        return;\n      }\n      let compressedCount = 0;\n      toast.info(`compressing of ${this.images.length} images started`);\n      let promises = this.images.map((image: ImageSource) => {\n        let type = `image/${this.filetype}`;\n\n        return this.safeImage(image, this.filetype).then(\n          (compressed_image) => {\n            let file = new File([compressed_image], image.name, { type });\n            compressedCount++;\n            toast.success(\n              `compressed ${image.name} ${compressedCount} / ${imageCount} images`\n            );\n            return zip.file(\n              `${image.name.replace(/(\\.[^/.]+)+$/, \"\")}.${this.filetype}`,\n              file\n            );\n          }\n        );\n      });\n      await Promise.all(promises);\n      zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n        saveAs(blob, \"images.zip\");\n      });\n    },\n    show() {\n      this.visible = true;\n    },\n    showImg(index: any) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n  watch: {\n    $props: {\n      handler() {\n        this.imgs = [];\n        this.index = 0;\n        this.images.forEach((image) => {\n          this.imgs.push(this.createObjectURL(image));\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n","\nimport { defineComponent } from \"vue\";\nimport FileUpload from \"vue-upload-component\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { useToast } from \"vue-toastification\";\nimport { convert } from \"@lenna-proj/lenna-cli\";\nimport { ImageSource } from \"../models/image\";\n\ndeclare interface FileOption {\n  text: string;\n  value: string;\n}\n\ndeclare interface ImageUploadPreviewData {\n  files: Object[];\n  imgs: string[];\n  visible: boolean;\n  index: number;\n  filetype: string;\n  options: Array<FileOption>;\n}\n\nexport default defineComponent({\n  components: {\n    FileUpload,\n    VueEasyLightbox,\n  },\n  props: {\n    images: {\n      type: Array as () => Array<ImageSource>,\n      required: true,\n    },\n  },\n  data(): ImageUploadPreviewData {\n    return {\n      files: [],\n      imgs: [],\n      visible: false,\n      index: 0,\n      filetype: \"png\",\n      options: [\n        { text: \"png\", value: \"png\" },\n        { text: \"jpg\", value: \"jpg\" },\n        { text: \"bmp\", value: \"bmp\" },\n        { text: \"ico\", value: \"ico\" },\n        { text: \"gif\", value: \"gif\" },\n      ],\n    };\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    inputFile(newFile: any, oldFile: any, prevent: any) {\n      //this.images.push(newFile.url);\n      this.imgs = [newFile.url];\n      this.$emit(\"changeImage\", newFile);\n    },\n    inputFilter(newFile: any, oldFile: any, prevent: any) {\n      if (newFile && !oldFile) {\n        if (!/\\.(gif|jpg|jpeg|png|webp)$/i.test(newFile.name)) {\n          alert(\"Your choice is not a picture\");\n          return prevent();\n        }\n      }\n      if (newFile && (!oldFile || newFile.file !== oldFile.file)) {\n        newFile.url = \"\";\n        let URL = window.URL || window.webkitURL;\n        if (URL && URL.createObjectURL) {\n          newFile.url = URL.createObjectURL(newFile.file);\n        }\n      }\n    },\n    createObjectURL(image: ImageSource) {\n      return URL.createObjectURL(image);\n    },\n    async safeImage(file: any, format: string) {\n      let data = await file\n        .arrayBuffer()\n        .then((image: any) => new Uint8Array(image));\n      return convert(data, format);\n    },\n    async downloadZip() {\n      let zip = new JSZip();\n      const toast = useToast();\n      const imageCount = this.images.length;\n      if (imageCount < 1) {\n        return;\n      }\n      let compressedCount = 0;\n      toast.info(`compressing of ${this.images.length} images started`);\n      let promises = this.images.map((image: ImageSource) => {\n        let type = `image/${this.filetype}`;\n\n        return this.safeImage(image, this.filetype).then((compressed_image) => {\n          let file = new File([compressed_image], image.name, { type });\n          compressedCount++;\n          toast.success(\n            `compressed ${image.name} ${compressedCount} / ${imageCount} images`\n          );\n          return zip.file(\n            `${image.name.replace(/(\\.[^/.]+)+$/, \"\")}.${this.filetype}`,\n            file\n          );\n        });\n      });\n      await Promise.all(promises);\n      zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n        saveAs(blob, \"images.zip\");\n      });\n    },\n    show() {\n      this.visible = true;\n    },\n    showImg(index: any) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n  watch: {\n    $props: {\n      handler() {\n        this.imgs = [];\n        this.index = 0;\n        this.images.forEach((image) => {\n          this.imgs = [this.createObjectURL(image)];\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n","\nimport { defineComponent, ref } from \"vue\";\nimport * as NProgress from \"nprogress\";\nimport { Slide } from \"vue3-burger-menu\";\nimport { useToast } from \"vue-toastification\";\nimport PluginsManager from \"../components/PluginsManager.vue\";\nimport ImageUpload from \"../components/ImageUpload.vue\";\nimport ImagePreview from \"../components/ImagePreview.vue\";\nimport ConfigComp from \"../components/ConfigComp.vue\";\nimport Help from \"../components/Help.vue\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\nimport { Image } from \"../models/image\";\nimport { processImages } from \"../controllers/processor\";\nimport { listPlugins } from \"../controllers/storage\";\n\nexport declare interface BatchData {\n  pluginUrl: string;\n  just: string | null;\n  defaultConfig: [];\n  defaultPlugins: string[];\n  sourceImages: Image[];\n  resultImages: Image[];\n  pluginManager: PluginManager;\n}\n\nexport default defineComponent({\n  name: \"Batch\",\n  components: {\n    Slide,\n    PluginsManager,\n    ImageUpload,\n    ImagePreview,\n    ConfigComp,\n    Help,\n  },\n  data(): BatchData {\n    return {\n      pluginUrl: \"\",\n      just: null,\n      defaultConfig: [],\n      defaultPlugins: [],\n      sourceImages: [],\n      resultImages: [],\n      pluginManager: new PluginManager(\"\"),\n    };\n  },\n  setup: () => {\n    const imageUpload = ref(ImageUpload);\n    const pluginsManager = ref(PluginsManager);\n    return {\n      imageUpload,\n      pluginsManager,\n    };\n  },\n  created() {\n    if (this.$route.query[\"config\"]) {\n      this.defaultConfig = JSON.parse(\n        // eslint-disable-next-line no-undef\n        Buffer.from(this.$route.query[\"config\"].toString(), \"base64\").toString(\n          \"binary\"\n        )\n      );\n      console.log(this.defaultConfig);\n    }\n    if (this.$route.query.plugin) {\n      this.defaultPlugins = [this.$route.query.plugin.toString()];\n    }\n    if (this.$route.query.just) {\n      this.pluginManager.filter = this.$route.query.just.toString();\n      this.just = this.$route.query.just.toString();\n    }\n    this.loadDefaultPluginsMap();\n    this.loadDefaultPluginJson();\n    this.loadAddedPlugins();\n  },\n  methods: {\n    loadPlugin(pluginUrl: string) {\n      console.log(\"loaded plugin: \", pluginUrl);\n      this.pluginManager.importPlugin(pluginUrl, pluginUrl);\n    },\n\n    loadDefaultPluginsMap() {\n      this.pluginManager.importPluginMap(\n        \"https://lenna.app/lenna-plugins/importmap.json\"\n      );\n    },\n    loadDefaultPluginJson() {\n      this.pluginManager.importPluginsJson(\n        \"https://lenna.app/lenna-plugins/plugins.json\"\n      );\n    },\n    loadAddedPlugins() {\n      listPlugins().forEach((plugin) => {\n        this.pluginManager.importPlugin(plugin, plugin);\n      });\n    },\n    onMorePlugins() {\n      window.location.replace(\"/marketplace\");\n    },\n    changeImages(files: any) {\n      this.sourceImages.push(files.file);\n    },\n    async processImages() {\n      NProgress.configure({ parent: \"#process\" });\n      NProgress.start();\n      const toast = useToast();\n\n      await processImages(\n        this.sourceImages,\n        this.resultImages,\n        this.pluginManager.getPlugins(),\n        {\n          info: (message: string) => {\n            toast.info(message);\n          },\n          success: (message: string) => {\n            toast.success(message);\n          },\n        },\n        NProgress.set\n      );\n\n      this.imageUpload.images = [];\n      this.sourceImages = [];\n\n      NProgress.done();\n      NProgress.remove();\n    },\n  },\n});\n","\nimport { defineComponent, ref } from \"vue\";\nimport * as NProgress from \"nprogress\";\nimport { Slide } from \"vue3-burger-menu\";\nimport { useToast } from \"vue-toastification\";\nimport PluginsManager from \"../components/PluginsManager.vue\";\nimport ImageUploadPreview from \"../components/ImageUploadPreview.vue\";\nimport ConfigComp from \"../components/ConfigComp.vue\";\nimport Help from \"../components/Help.vue\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\nimport { Image, ImageSource } from \"../models/image\";\nimport { processImages } from \"../controllers/processor\";\nimport { listPlugins } from \"../controllers/storage\";\n\nexport declare interface HomeData {\n  pluginUrl: string;\n  just: string | null;\n  defaultConfig: [];\n  defaultPlugins: string[];\n  sourceImages: Image[];\n  resultImages: ImageSource[];\n  pluginManager: PluginManager;\n}\n\nexport default defineComponent({\n  name: \"Home\",\n  components: {\n    Slide,\n    PluginsManager,\n    ImageUploadPreview,\n    ConfigComp,\n    Help,\n  },\n  data(): HomeData {\n    return {\n      pluginUrl: \"\",\n      just: null,\n      defaultConfig: [],\n      defaultPlugins: [],\n      sourceImages: [],\n      resultImages: [],\n      pluginManager: new PluginManager(\"\"),\n    };\n  },\n  setup: () => {\n    const pluginsManager = ref(PluginsManager);\n    return {\n      pluginsManager,\n    };\n  },\n  created() {\n    if (this.$route.query[\"config\"]) {\n      this.defaultConfig = JSON.parse(\n        // eslint-disable-next-line no-undef\n        Buffer.from(this.$route.query[\"config\"].toString(), \"base64\").toString(\n          \"binary\"\n        )\n      );\n      console.log(this.defaultConfig);\n    }\n    if (this.$route.query.plugin) {\n      this.defaultPlugins = [this.$route.query.plugin.toString()];\n    }\n    if (this.$route.query.just) {\n      this.pluginManager.filter = this.$route.query.just.toString();\n      this.just = this.$route.query.just.toString();\n    }\n    this.loadDefaultPluginsMap();\n    this.loadDefaultPluginJson();\n    this.loadAddedPlugins();\n  },\n  methods: {\n    loadPlugin(pluginUrl: string) {\n      console.log(\"loaded plugin: \", pluginUrl);\n      this.pluginManager.importPlugin(pluginUrl, pluginUrl);\n    },\n\n    loadDefaultPluginsMap() {\n      this.pluginManager.importPluginMap(\n        \"https://lenna.app/lenna-plugins/importmap.json\"\n      );\n    },\n    loadDefaultPluginJson() {\n      this.pluginManager.importPluginsJson(\n        \"https://lenna.app/lenna-plugins/plugins.json\"\n      );\n    },\n    loadAddedPlugins() {\n      listPlugins().forEach((plugin) => {\n        this.pluginManager.importPlugin(plugin, plugin);\n      });\n    },\n    onMorePlugins() {\n      window.location.replace(\"/marketplace\");\n    },\n    changeImages(files: any) {\n      this.sourceImages = [files.file];\n      this.processImages();\n    },\n    async processImages() {\n      NProgress.configure({ parent: \"#process\" });\n      NProgress.start();\n\n      await processImages(\n        this.sourceImages,\n        this.resultImages,\n        this.pluginManager.getPlugins(),\n        {\n          info: (message: string) => {},\n          success: (message: string) => {},\n        },\n        NProgress.set\n      );\n      NProgress.done();\n      NProgress.remove();\n    },\n  },\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport route from \"./router\"\nimport \"./styles/index.scss\";\n\nimport Toast, { POSITION } from \"vue-toastification\";\nimport \"vue-toastification/dist/index.css\";\n\ncreateApp(App)\n  .use(route)\n  .use(Toast, { position: POSITION.TOP_LEFT })\n  .mount(\"#app\");\n","import { LennaPlugin } from '../models/plugin';\nimport { PluginModule } from '../models/plugin_module';\nimport { Config } from '../models/config';\nimport { loadConfig } from \"../controllers/storage\";\n\nexport class PluginManager {\n\n    configs: Config[] = []\n    plugins: LennaPlugin[] = []\n\n    filter: string = \"\"\n\n    constructor(filter: string) {\n        this.filter = filter;\n    }\n\n    async importPlugin(key: string, url: string) {\n        // eslint-disable-next-line no-undef\n        return System.import(url).then(async (module: any) => {\n            // eslint-disable-next-line no-undef\n            await module.init(__webpack_require__.S[\"default\"]);\n            return module.get(\"default\").then((plugin: Function) => {\n                this.importModule(key, url, plugin());\n            });\n        });\n    }\n\n    async importModule(key: string, url: string, module: PluginModule) {\n        const pluginConfig = loadConfig({\n            name: key,\n            url: url,\n            plugin: module,\n            enabled: false,\n            config: {},\n        });\n        if (this.filter.length > 0) {\n            if (pluginConfig.name.includes(this.filter)) {\n                pluginConfig.enabled = true;\n                this.configs.push({\n                    name: pluginConfig.name,\n                    enabled: true,\n                    config: pluginConfig.config,\n                });\n                this.plugins.push(pluginConfig);\n            }\n        } else {\n            this.plugins.push(pluginConfig);\n        }\n    }\n\n    async importPluginMap(mapUrl: string) {\n        const tasks = [];\n        const res = await fetch(mapUrl);\n        const data = await res.json();\n        for (const key in data.imports) {\n            const url = data.imports[key];\n            tasks.push(\n                System.import(key).then((plugin: PluginModule) => {\n                    return this.importModule(key, url, plugin);\n                })\n            );\n        }\n        return Promise.all(tasks);\n    }\n\n    async importPluginsJson(jsonUrl: string) {\n        const tasks = [];\n        const res = await fetch(jsonUrl);\n        const data = await res.json();\n        for (const key in data.plugins) {\n            const url = data.plugins[key];\n            tasks.push(this.importPlugin(key, url));\n        }\n        return Promise.all(tasks);\n    }\n\n    changeConfig(name: string, config: Object) {\n        const plugin = this.plugins.find((o: LennaPlugin) => o.name === name);\n        if (plugin) {\n            plugin.config = config;\n        }\n    }\n\n    getPlugins(): LennaPlugin[] {\n        return this.plugins;\n    }\n}\n","import { LennaPlugin } from \"../models/plugin\";\nimport { Logger } from \"../models/logger\";\nimport { Image } from \"../models/image\";\n\nconst processImages = async (sourceImages: Image[], resultImages: Image[], plugins: LennaPlugin[], logger: Logger, progressCallback: Function) => {\n\n    const imageCount = sourceImages.length;\n    let convertedCount = 0;\n    logger.info(`converting ${imageCount} images started`);\n    resultImages.length = 0;\n    const tasks = [];\n    for (const sourceImage of sourceImages) {\n        tasks.push(\n            processImage(sourceImage, plugins, progressCallback).then((image) => {\n                const file = new File([image], sourceImage.name, {\n                    type: \"image/png\",\n                });\n                resultImages.push(file);\n                convertedCount++;\n                logger.success(\n                    `converted ${convertedCount} of ${imageCount} images`\n                );\n            })\n        );\n    }\n    return Promise.all(tasks).then(() => {\n        logger.info(`converted ${convertedCount} images`);\n    });\n}\n\n\nconst processImage = async (imageFile: any, plugins: LennaPlugin[], progressCallback: Function) => {\n    let progress = 0.0;\n    let img = new Uint8Array(await imageFile.arrayBuffer());\n    for (const plugin of plugins) {\n        progressCallback(progress);\n        progress += 1 / plugins.length;\n        if (plugin.enabled) {\n            img = await plugin.plugin?.process(plugin.config, img);\n        }\n    }\n    progressCallback(1.0);\n    return img;\n}\n\nexport { processImages, processImage }\n","import { LennaPlugin } from \"../models/plugin\";\nimport { Config } from \"../models/config\";\n\nconst saveConfig = (plugin: LennaPlugin) => {\n    const config: Config = {\n        name: plugin.name,\n        enabled: plugin.enabled,\n        config: plugin.config,\n    };\n    localStorage.setItem(plugin.name, JSON.stringify(config));\n};\n\nconst loadConfig = (plugin: LennaPlugin): LennaPlugin => {\n    const savedConfig = localStorage.getItem(plugin.name);\n    if (savedConfig) {\n        const config: Config = JSON.parse(savedConfig);\n        plugin.enabled = config.enabled;\n        plugin.config = Object.assign(plugin.config, config.config);\n    }\n    return plugin;\n};\n\nconst loadConfigFromParams = (plugin: LennaPlugin, params: Config[]): LennaPlugin => {\n    params.forEach((config: Config) => {\n        if (config.name === plugin.name) {\n            plugin.enabled = config.enabled;\n            plugin.config = Object.assign(plugin.config, config.config);\n        }\n    });\n    return plugin;\n};\n\nconst addPlugin = (plugin: string) => {\n    const plugins: string[] = JSON.parse(localStorage.getItem(\"plugins\") || \"[]\");\n    if (!plugins.includes(plugin)) {\n        plugins.push(plugin);\n        localStorage.setItem(\"plugins\", JSON.stringify(plugins));\n    }\n};\n\nconst listPlugins = (): string[] => {\n    const plugins = localStorage.getItem(\"plugins\") || \"[]\";\n    return JSON.parse(plugins);\n}\n\nexport { saveConfig, loadConfig, loadConfigFromParams, addPlugin, listPlugins };\n","import { createWebHistory, createRouter } from \"vue-router\";\nimport Home from \"@/views/Home.vue\";\nimport Batch from \"@/views/Batch.vue\";\nimport About from \"@/views/About.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n  },\n  {\n    path: \"/batch\",\n    name: \"Batch\",\n    component: Batch,\n  },\n  {\n    path: \"/about\",\n    name: \"About\",\n    component: About,\n  },\n  {\n    path: \"/just/${just}\",\n    name: \"Just\",\n    component: Home,\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;","export default __webpack_public_path__ + \"aad257b5f9f4288436c6e6e0ebb2e336.png\";","<template>\n  <div class=\"navbar\">\n    <div id=\"banner\"><img src=\"@/assets/banner.png\" /></div>\n    <router-link to=\"/\">Home</router-link>\n    <router-link to=\"/batch\">Batch Processing</router-link>\n    <a href=\"marketplace\">Marketplace</a>\n    <router-link to=\"/about\">About</router-link>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Navbar\",\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n\n$navbar_padding: 20px;\n\n.navbar {\n  padding: 0px $navbar_padding;\n  position: fixed;\n  top: 0;\n  width: calc(100% - 2 * #{$navbar_padding});\n  height: 120px;\n  margin: 0;\n  overflow: hidden;\n  background-color: $nav_background;\n  justify-content: flex-end;\n  display: flex;\n  color: $text_color;\n  text-transform: uppercase;\n}\n\n.navbar a {\n  display: block;\n  color: $text_color;\n  text-align: center;\n  margin: 40px 0px;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\n.navbar a:hover {\n  background-color: $primary_color;\n}\n.navbar .router-link-active {\n  color: white;\n  background-color: $primary_color;\n}\n\n.navbar a:active {\n  background-color: $primary_color;\n  transform: translateY(8px);\n  opacity: 0.5;\n}\n\n#banner {\n  position: absolute;\n  top: 10px;\n  left: 40%;\n  max-height: 100px;\n}\n\n#banner img {\n  max-height: 100px;\n}\n\n@media screen and (max-width: 800px) {\n  #banner {\n    left: 10px;\n    top: 40px;\n  }\n  #banner img {\n    display: none;\n  }\n  #banner::before {\n    background-image: url(\"https://lenna.app/logo.png\");\n    background-size: 30px 30px;\n    width: 30px;\n    height: 30px;\n    display: inline-block;\n    content: \"\";\n  }\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Navbar\",\n});\n","import { render } from \"./Navbar.vue?vue&type=template&id=501d834e&scoped=true\"\nimport script from \"./Navbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Navbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=501d834e&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-501d834e\"\n\nexport default script","<template>\n  <div class=\"footer\">\n    <v-footer>\n      Convert images online without upload of your data.\n      <p>\n        &copy; {{ new Date().getFullYear() }} —\n        <a href=\"https://lenna.app\"> lenna.app </a>\n      </p>\n    </v-footer>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Footer\"\n});\n</script>\n<style scoped>\n.footer {\n  text-align: center;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Footer\"\n});\n","import { render } from \"./Footer.vue?vue&type=template&id=06c5fd87&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=ts\"\nexport * from \"./Footer.vue?vue&type=script&lang=ts\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=06c5fd87&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-06c5fd87\"\n\nexport default script","<template>\n  <div>\n  <Navbar />\n  <router-view />\n  <Footer />\n  </div>\n</template>\n<script>\nimport { defineComponent } from \"vue\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport Footer from \"@/components/Footer.vue\";\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Navbar,\n    Footer\n  },\n});\n</script>","import { render } from \"./App.vue?vue&type=template&id=0acc35d2\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <button v-on:click=\"generateConfigUrlBase64\" v-if=\"plugins\">\n      generate actual config url\n    </button>\n    <div class=\"config\" v-if=\"base64config\">\n      <textarea v-model=\"base64config\" :readonly=\"true\"></textarea>\n    </div>\n\n    <button v-on:click=\"generateLennaConfig\">lenna.yml</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { LennaPlugin } from \"../models/plugin\";\nimport {\n  generateBase64Config,\n  generateYamlConfig,\n} from \"../controllers/config_generator\";\nexport default defineComponent({\n  name: \"ConfigComp\",\n  props: {\n    plugins: {\n      type: Array as () => Array<LennaPlugin>,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      url: \"https://lenna.app/?config=\",\n      base64config: \"\",\n    };\n  },\n  methods: {\n    download(filename: string, text: string) {\n      var element = document.createElement(\"a\");\n      element.setAttribute(\n        \"href\",\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n      );\n      element.setAttribute(\"download\", filename);\n\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n    },\n    generateConfigUrlBase64() {\n      let config = generateBase64Config(this.plugins);\n      this.base64config = this.url + config;\n    },\n    generateLennaConfig() {\n      let lenna_yml = generateYamlConfig(this.plugins);\n      this.download(\"lenna.yml\", lenna_yml);\n    },\n  },\n});\n</script>\n\n<style scoped>\n.config {\n  margin: 10px;\n  width: 200px;\n  height: 300px;\n  background-color: #efcda4;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport { LennaPlugin } from \"../models/plugin\";\nimport {\n  generateBase64Config,\n  generateYamlConfig,\n} from \"../controllers/config_generator\";\nexport default defineComponent({\n  name: \"ConfigComp\",\n  props: {\n    plugins: {\n      type: Array as () => Array<LennaPlugin>,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      url: \"https://lenna.app/?config=\",\n      base64config: \"\",\n    };\n  },\n  methods: {\n    download(filename: string, text: string) {\n      var element = document.createElement(\"a\");\n      element.setAttribute(\n        \"href\",\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n      );\n      element.setAttribute(\"download\", filename);\n\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n    },\n    generateConfigUrlBase64() {\n      let config = generateBase64Config(this.plugins);\n      this.base64config = this.url + config;\n    },\n    generateLennaConfig() {\n      let lenna_yml = generateYamlConfig(this.plugins);\n      this.download(\"lenna.yml\", lenna_yml);\n    },\n  },\n});\n","import YAML from \"yaml\";\nimport { LennaPlugin } from \"../models/plugin\";\n\nconst generateBase64Config = (plugins: LennaPlugin[]): string => {\n    const configs = [];\n    for (const plugin of plugins) {\n        if (plugin.enabled) {\n            const config: any = plugin.config;\n            config.name = plugin.name;\n            configs.push(config);\n        }\n    }\n    const config = JSON.stringify(configs);\n    return btoa(config);\n}\n\nconst generateYamlConfig = (plugins: LennaPlugin[]): string => {\n    const configs = [];\n    for (const plugin of plugins) {\n        if (plugin.enabled) {\n            const config: any = plugin.config;\n            config.name = plugin.name;\n            configs.push(config);\n        }\n    }\n    const comment =\n        \"# https://github.com/lenna-project/lenna-cli\\n\" +\n        \"# lenna-cli images_path --config lenna.yml\\n\";\n    const yml_config = YAML.stringify({ pipeline: configs });\n    return comment + yml_config;\n}\n\nexport { generateBase64Config, generateYamlConfig }","import { render } from \"./ConfigComp.vue?vue&type=template&id=171f4380&scoped=true\"\nimport script from \"./ConfigComp.vue?vue&type=script&lang=ts\"\nexport * from \"./ConfigComp.vue?vue&type=script&lang=ts\"\n\nimport \"./ConfigComp.vue?vue&type=style&index=0&id=171f4380&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-171f4380\"\n\nexport default script","<template>\n  <div class=\"help\">\n    <h2>How to Convert Images</h2>\n    <ol>\n      <li>Drop images into left box.</li>\n      <li>Enable the plugins you want to use in convertion.</li>\n      <li>Order the plugins via drag and drop</li>\n      <li>Press the process button.</li>\n      <li>Select file type you want to download on the right.</li>\n      <li>Download your converted images compressed as zip.</li>\n    </ol>\n  </div>\n</template>\n<script setup lang=\"ts\">\n</script>\n<style scoped>\n.help {\n  display: block;\n}\n</style>\n","import { render } from \"./Help.vue?vue&type=template&id=0067483e&scoped=true\"\nconst script = {}\n\nimport \"./Help.vue?vue&type=style&index=0&id=0067483e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-0067483e\"\n\nexport default script","import { render } from \"./ImagePreview.vue?vue&type=template&id=3273a88c&scoped=true\"\nimport script from \"./ImagePreview.vue?vue&type=script&lang=ts\"\nexport * from \"./ImagePreview.vue?vue&type=script&lang=ts\"\n\nimport \"./ImagePreview.vue?vue&type=style&index=0&id=3273a88c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-3273a88c\"\n\nexport default script","<template>\n  <div class=\"image-upload\">\n    <FileUpload\n      :multiple=\"true\"\n      :drop=\"true\"\n      :drop-directory=\"true\"\n      extensions=\"gif,jpg,jpeg,png,webp\"\n      accept=\"image/png,image/gif,image/jpeg,image/webp\"\n      v-model=\"files\"\n      @input-filter=\"inputFilter\"\n      @input-file=\"inputFile\"\n      ref=\"upload\"\n      class=\"file-upload\"\n    >\n      drop<br />or<br />select files</FileUpload\n    >\n    <div v-if=\"images.length > 0\" class=\"image-container\">\n      <div\n        v-for=\"(src, index) in images\"\n        :key=\"index\"\n        class=\"pic\"\n        @click=\"() => showImg(index)\"\n      >\n        <img height=\"140\" :src=\"src\" />\n      </div>\n      <vue-easy-lightbox\n        escDisabled\n        moveDisabled\n        :visible=\"visible\"\n        :imgs=\"images\"\n        :index=\"index\"\n        @hide=\"handleHide\"\n      ></vue-easy-lightbox>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport FileUpload from \"vue-upload-component\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\n\nexport declare interface ImageUploadData {\n  files: Object[];\n  images: Object[];\n  visible: boolean;\n  index: number;\n}\n\nexport default defineComponent({\n  components: {\n    FileUpload,\n    VueEasyLightbox,\n  },\n  data(): ImageUploadData {\n    return {\n      files: [],\n      images: [],\n      visible: false,\n      index: 0,\n    };\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    inputFile(newFile: any, oldFile: any, prevent: any) {\n      this.images.push(newFile.url);\n      this.$emit(\"changeImage\", newFile);\n    },\n    inputFilter(newFile: any, oldFile: any, prevent: any) {\n      if (newFile && !oldFile) {\n        if (!/\\.(gif|jpg|jpeg|png|webp)$/i.test(newFile.name)) {\n          alert(\"Your choice is not a picture\");\n          return prevent();\n        }\n      }\n      if (newFile && (!oldFile || newFile.file !== oldFile.file)) {\n        newFile.url = \"\";\n        let URL = window.URL || window.webkitURL;\n        if (URL && URL.createObjectURL) {\n          newFile.url = URL.createObjectURL(newFile.file);\n        }\n      }\n    },\n    showImg(index: number) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.image-upload {\n  margin: 10px;\n  width: 300px;\n  height: 350px;\n  background-color: $background_color;\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: 10px 5px 5px $shadow;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.file-upload {\n  text-transform: uppercase;\n  font-size: 14pt;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.file-upload:hover {\n  transform: scale(1.05);\n}\n.image-container {\n  height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: auto;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport FileUpload from \"vue-upload-component\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\n\nexport declare interface ImageUploadData {\n  files: Object[];\n  images: Object[];\n  visible: boolean;\n  index: number;\n}\n\nexport default defineComponent({\n  components: {\n    FileUpload,\n    VueEasyLightbox,\n  },\n  data(): ImageUploadData {\n    return {\n      files: [],\n      images: [],\n      visible: false,\n      index: 0,\n    };\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    inputFile(newFile: any, oldFile: any, prevent: any) {\n      this.images.push(newFile.url);\n      this.$emit(\"changeImage\", newFile);\n    },\n    inputFilter(newFile: any, oldFile: any, prevent: any) {\n      if (newFile && !oldFile) {\n        if (!/\\.(gif|jpg|jpeg|png|webp)$/i.test(newFile.name)) {\n          alert(\"Your choice is not a picture\");\n          return prevent();\n        }\n      }\n      if (newFile && (!oldFile || newFile.file !== oldFile.file)) {\n        newFile.url = \"\";\n        let URL = window.URL || window.webkitURL;\n        if (URL && URL.createObjectURL) {\n          newFile.url = URL.createObjectURL(newFile.file);\n        }\n      }\n    },\n    showImg(index: number) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n});\n","import { render } from \"./ImageUpload.vue?vue&type=template&id=03382e06&scoped=true\"\nimport script from \"./ImageUpload.vue?vue&type=script&lang=ts\"\nexport * from \"./ImageUpload.vue?vue&type=script&lang=ts\"\n\nimport \"./ImageUpload.vue?vue&type=style&index=0&id=03382e06&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-03382e06\"\n\nexport default script","import { render } from \"./ImageUploadPreview.vue?vue&type=template&id=42039569&scoped=true\"\nimport script from \"./ImageUploadPreview.vue?vue&type=script&lang=ts\"\nexport * from \"./ImageUploadPreview.vue?vue&type=script&lang=ts\"\n\nimport \"./ImageUploadPreview.vue?vue&type=style&index=0&id=42039569&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-42039569\"\n\nexport default script","<template>\n  <div class=\"plugins-manager\">\n    <draggable\n      class=\"dragArea list-group plugins\"\n      :list=\"plugins\"\n      @change=\"change()\"\n    >\n      <div class=\"list-group-item\" v-for=\"item in plugins\" :key=\"item.name\">\n        <Plugin\n          :name=\"item.name\"\n          :plugin=\"item.plugin\"\n          :url=\"item.url\"\n          :defaultConfig=\"configs\"\n          @changeEnabled=\"changeEnabled(item.name, $event)\"\n          @changeConfig=\"changeConfig(item.name, $event)\"\n        />\n      </div>\n    </draggable>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { VueDraggableNext } from \"vue-draggable-next\";\nimport Plugin from \"../components/Plugin.vue\";\nimport { LennaPlugin } from \"../models/plugin\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\nexport declare interface PluginsManagerData {\n  plugins: LennaPlugin[];\n  configs: Configs;\n}\n\nexport default defineComponent({\n  name: \"PluginsManager\",\n  props: {\n    pluginsmap: String,\n    pluginsjson: String,\n    defaultConfig: Object,\n    pluginManager: Object as () => PluginManager,\n    defaultPlugins: Array as () => Array<string>,\n  },\n  components: {\n    Plugin,\n    draggable: VueDraggableNext,\n  },\n  data(): PluginsManagerData {\n    return {\n      plugins: [],\n      configs: {},\n    };\n  },\n  beforeMount() {\n    this.plugins = this.pluginManager?.getPlugins() || [];\n    //this.importPlugin(\"local\", \"http://localhost:3002/remoteEntry.js\");\n  },\n  methods: {\n    changeEnabled(name: string, enabled: boolean) {\n      let plugin = this.plugins.find((o: any) => o.name === name);\n      if (plugin) {\n        plugin.enabled = enabled;\n        this.change();\n      }\n    },\n    changeConfig(name: string, config: Object) {\n      let plugin = this.plugins.find((o: LennaPlugin) => o.name === name);\n      if (plugin) {\n        plugin.config = config;\n      }\n      this.change();\n    },\n    change() {\n      this.$emit(\"change\");\n    },\n    raw(comp: any) {\n      return comp;\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.plugins-manager {\n  background-color: $body_background;\n}\n.plugins {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n</style>\n","<template>\n  <div class=\"plugin\" v-if=\"plugin\">\n    <Icon v-if=\"icon && !enabled\" :src=\"icon\" />\n    <div>\n      <h2>{{ plugin.name() }}</h2>\n      <Checkbox :checked=\"enabled\" @update:checked=\"updateEnabled($event)\" />\n    </div>\n    <div v-if=\"enabled\">\n      <span>{{ plugin.description() }}</span>\n      <div v-if=\"ui && config\">\n        <component\n          :key=\"pluginKey\"\n          :is=\"ui\"\n          :defaultConfig=\"config\"\n          @changeConfig=\"updateConfig($event)\"\n        ></component>\n      </div>\n      <div v-else>\n        <PluginConfig\n          :key=\"pluginKey\"\n          :defaultConfig=\"config\"\n          @changeConfig=\"updateConfig($event)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { shallowRef, Ref, defineComponent } from \"vue\";\nimport PluginConfig from \"./PluginConfig.vue\";\nimport {PluginModule} from \"../models/plugin_module\";\nimport {Config} from \"../models/config\";\nimport Checkbox from \"./Checkbox.vue\";\nimport Icon from \"./Icon.vue\";\nimport {\n  loadConfig,\n  loadConfigFromParams,\n  saveConfig,\n} from \"@/controllers/storage\";\n\ndeclare interface PluginData {\n  ui: Ref;\n  icon: Ref;\n  processor: any;\n  enabled: boolean;\n  keyCounter: number;\n  pluginKey: string;\n  config: Object;\n}\n\nexport default defineComponent({\n  name: \"Plugin\",\n  props: {\n    name: String,\n    plugin: Object as () => PluginModule,\n    url: String,\n    defaultConfig: Object as () => Config[],\n  },\n  components: {\n    Checkbox,\n    Icon,\n    PluginConfig,\n  },\n  data(): PluginData {\n    return {\n      ui: shallowRef(null),\n      icon: shallowRef(null),\n      processor: null,\n      enabled: false,\n      keyCounter: 0,\n      pluginKey: \"\",\n      config: {},\n    };\n  },\n  methods: {\n    async loadDefaultConfig() {\n      this.plugin?.defaultConfig().then((defaultConfig: any) => {\n        if (this.defaultConfig && this.defaultConfig.length > 0) {\n          const { enabled, config } = loadConfigFromParams(\n            {\n              name: this.name || \"\",\n              enabled: true,\n              config: defaultConfig,\n            },\n            this.defaultConfig\n          );\n          this.config = config;\n          this.enabled = enabled || false;\n        } else {\n          const { enabled, config } = loadConfig({\n            name: this.name || \"\",\n            enabled: false,\n            config: defaultConfig,\n          });\n          this.config = config;\n          this.enabled = enabled || false;\n        }\n      });\n    },\n    async loadUI() {\n      if (this.plugin?.ui && this.url) {\n        // eslint-disable-next-line no-undef\n        System.import(this.url)\n          .then((module: any) => {\n            module.get(\"./Widget\").then((widget: Function) => {\n              this.ui = widget().default;\n            });\n          })\n          .catch((e: any) => console.log(e));\n      }\n      if (this.plugin?.icon) {\n        this.icon = this.plugin.icon();\n      }\n    },\n    async updateConfig(config: Object) {\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: config,\n      });\n      this.$emit(\"changeConfig\", config);\n    },\n    async updateEnabled(enabled: boolean) {\n      this.enabled = enabled;\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: this.config,\n      });\n      this.$emit(\"changeEnabled\", enabled);\n    },\n  },\n  created() {\n    console.log(this.name);\n    this.loadUI();\n    this.loadDefaultConfig();\n  },\n  watch: {\n    defaultConfig: {\n      handler: function () {\n        this.keyCounter += 1;\n        this.pluginKey = (this.name || \"\") + this.keyCounter;\n      },\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.plugin {\n  margin: 10px;\n  padding: 10px;\n  min-width: 250px;\n  min-height: 250px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 5px 5px 5px $shadow;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.plugin:hover {\n  box-shadow: 10px 10px 5px $shadow;\n  transform: scale(1.1);\n}\n.plugin h2 {\n  font-weight: normal;\n  font-style: normal;\n  font-size: 14pt;\n  text-transform: uppercase;\n}\n</style>\n","<template>\n  <div class=\"plugin-config\" v-if=\"config\">\n    <div v-for=\"c in config\" :key=\"c.key\">\n      <div class=\"parameter\">\n        <label>{{ c.key }}: </label>\n        <input\n          type=\"number\"\n          :placeholder=\"c.key\"\n          v-model=\"c.value\"\n          @change=\"updateConfig()\"\n          v-bind:id=\"c.key\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\ninterface Config {\n  key: string;\n  value: any;\n}\n\ndeclare interface PluginConfigData {\n  config: Config[];\n}\n\nexport default defineComponent({\n  name: \"PluginConfig\",\n  props: {\n    defaultConfig: Object,\n  },\n  data(): PluginConfigData {\n    return {\n      config: [],\n    };\n  },\n  methods: {\n    async updateConfig() {\n      let config: Configs = {};\n      for (let c of this.config) {\n        config[c.key] = c.value;\n      }\n      this.$emit(\"changeConfig\", config);\n    },\n  },\n  created() {\n    for (let key in this.defaultConfig) {\n      let config = { key: key, value: this.defaultConfig[key] };\n      this.config.push(config);\n    }\n    this.updateConfig();\n  },\n});\n</script>\n\n<style scoped>\n.plugin-config {\n  margin: 5px;\n}\n.parameter {\n  display: flex;\n  justify-content: space-between;\n  min-height: 50px;\n}\n.parameter input {\n  min-width: 50px;\n  max-width: 100px;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\ninterface Config {\n  key: string;\n  value: any;\n}\n\ndeclare interface PluginConfigData {\n  config: Config[];\n}\n\nexport default defineComponent({\n  name: \"PluginConfig\",\n  props: {\n    defaultConfig: Object,\n  },\n  data(): PluginConfigData {\n    return {\n      config: [],\n    };\n  },\n  methods: {\n    async updateConfig() {\n      let config: Configs = {};\n      for (let c of this.config) {\n        config[c.key] = c.value;\n      }\n      this.$emit(\"changeConfig\", config);\n    },\n  },\n  created() {\n    for (let key in this.defaultConfig) {\n      let config = { key: key, value: this.defaultConfig[key] };\n      this.config.push(config);\n    }\n    this.updateConfig();\n  },\n});\n","import { render } from \"./PluginConfig.vue?vue&type=template&id=4ae0c414&scoped=true\"\nimport script from \"./PluginConfig.vue?vue&type=script&lang=ts\"\nexport * from \"./PluginConfig.vue?vue&type=script&lang=ts\"\n\nimport \"./PluginConfig.vue?vue&type=style&index=0&id=4ae0c414&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-4ae0c414\"\n\nexport default script","<template>\n  <div class=\"checkbox-container\">\n    <label class=\"checkbox\">\n      <input\n        @input=\"(event) => $emit('update:checked', event.target.checked)\"\n        type=\"checkbox\"\n        :checked=\"checked\"\n        id=\"checkbox\"\n      />\n      <span></span>\n    </label>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Checkbox\",\n  props: {\n    checked: {\n      type: Boolean,\n    },\n  },\n  emits: [\"update:checked\"],\n  computed: {\n    value: {\n      get() {\n        return this.checked;\n      },\n      set(value: boolean) {\n        this.$emit(\"update:checked\", value);\n      },\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n.checkbox-container {\n  height: 50px;\n}\n.checkbox {\n  cursor: pointer;\n  position: relative;\n}\n.checkbox > input {\n  height: 40px;\n  width: 50px;\n  position: absolute;\n  left: -25px;\n  top: 0rem;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -o-appearance: none;\n  appearance: none;\n  border-radius: 25px;\n  outline: none;\n  transition-duration: 0.3s;\n  background-color: #a2f6f2;\n  cursor: pointer;\n}\n.checkbox > input:checked {\n  background-color: #a2f6f2;\n}\n.checkbox > input:checked + span::before {\n  font-size: 2.4em;\n  content: \"\\2713\";\n  text-align: center;\n  color: white;\n  position: absolute;\n  left: -0.5rem;\n  top: 0rem;\n}\n.checkbox > input:active {\n  border: 2px solid #34495e;\n}\n.checkbox-container:hover {\n  transform: scale(0.9);\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Checkbox\",\n  props: {\n    checked: {\n      type: Boolean,\n    },\n  },\n  emits: [\"update:checked\"],\n  computed: {\n    value: {\n      get() {\n        return this.checked;\n      },\n      set(value: boolean) {\n        this.$emit(\"update:checked\", value);\n      },\n    },\n  },\n});\n","import { render } from \"./Checkbox.vue?vue&type=template&id=411bce60&scoped=true\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\n\nimport \"./Checkbox.vue?vue&type=style&index=0&id=411bce60&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-411bce60\"\n\nexport default script","import { render } from \"./Icon.vue?vue&type=template&id=223afea4&scoped=true\"\nimport script from \"./Icon.vue?vue&type=script&lang=ts\"\nexport * from \"./Icon.vue?vue&type=script&lang=ts\"\n\nimport \"./Icon.vue?vue&type=style&index=0&id=223afea4&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-223afea4\"\n\nexport default script","\nexport default {\n  props: {\n    src: {\n      type: [Object, String],\n    },\n  },\n};\n","<template>\n  <div>\n    <img id=\"icon\" :src=\"src\" />\n  </div>\n</template>\n<script lang=\"ts\">\nexport default {\n  props: {\n    src: {\n      type: [Object, String],\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n#icon {\n  margin: 10px;\n  margin-top: 20px;\n  height: 96px;\n  left: 50%;\n}\n</style>\n","\nimport { shallowRef, Ref, defineComponent } from \"vue\";\nimport PluginConfig from \"./PluginConfig.vue\";\nimport {PluginModule} from \"../models/plugin_module\";\nimport {Config} from \"../models/config\";\nimport Checkbox from \"./Checkbox.vue\";\nimport Icon from \"./Icon.vue\";\nimport {\n  loadConfig,\n  loadConfigFromParams,\n  saveConfig,\n} from \"@/controllers/storage\";\n\ndeclare interface PluginData {\n  ui: Ref;\n  icon: Ref;\n  processor: any;\n  enabled: boolean;\n  keyCounter: number;\n  pluginKey: string;\n  config: Object;\n}\n\nexport default defineComponent({\n  name: \"Plugin\",\n  props: {\n    name: String,\n    plugin: Object as () => PluginModule,\n    url: String,\n    defaultConfig: Object as () => Config[],\n  },\n  components: {\n    Checkbox,\n    Icon,\n    PluginConfig,\n  },\n  data(): PluginData {\n    return {\n      ui: shallowRef(null),\n      icon: shallowRef(null),\n      processor: null,\n      enabled: false,\n      keyCounter: 0,\n      pluginKey: \"\",\n      config: {},\n    };\n  },\n  methods: {\n    async loadDefaultConfig() {\n      this.plugin?.defaultConfig().then((defaultConfig: any) => {\n        if (this.defaultConfig && this.defaultConfig.length > 0) {\n          const { enabled, config } = loadConfigFromParams(\n            {\n              name: this.name || \"\",\n              enabled: true,\n              config: defaultConfig,\n            },\n            this.defaultConfig\n          );\n          this.config = config;\n          this.enabled = enabled || false;\n        } else {\n          const { enabled, config } = loadConfig({\n            name: this.name || \"\",\n            enabled: false,\n            config: defaultConfig,\n          });\n          this.config = config;\n          this.enabled = enabled || false;\n        }\n      });\n    },\n    async loadUI() {\n      if (this.plugin?.ui && this.url) {\n        // eslint-disable-next-line no-undef\n        System.import(this.url)\n          .then((module: any) => {\n            module.get(\"./Widget\").then((widget: Function) => {\n              this.ui = widget().default;\n            });\n          })\n          .catch((e: any) => console.log(e));\n      }\n      if (this.plugin?.icon) {\n        this.icon = this.plugin.icon();\n      }\n    },\n    async updateConfig(config: Object) {\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: config,\n      });\n      this.$emit(\"changeConfig\", config);\n    },\n    async updateEnabled(enabled: boolean) {\n      this.enabled = enabled;\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: this.config,\n      });\n      this.$emit(\"changeEnabled\", enabled);\n    },\n  },\n  created() {\n    console.log(this.name);\n    this.loadUI();\n    this.loadDefaultConfig();\n  },\n  watch: {\n    defaultConfig: {\n      handler: function () {\n        this.keyCounter += 1;\n        this.pluginKey = (this.name || \"\") + this.keyCounter;\n      },\n    },\n  },\n});\n","import { render } from \"./Plugin.vue?vue&type=template&id=b286d410&scoped=true\"\nimport script from \"./Plugin.vue?vue&type=script&lang=ts\"\nexport * from \"./Plugin.vue?vue&type=script&lang=ts\"\n\nimport \"./Plugin.vue?vue&type=style&index=0&id=b286d410&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-b286d410\"\n\nexport default script","\nimport { defineComponent } from \"vue\";\nimport { VueDraggableNext } from \"vue-draggable-next\";\nimport Plugin from \"../components/Plugin.vue\";\nimport { LennaPlugin } from \"../models/plugin\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\nexport declare interface PluginsManagerData {\n  plugins: LennaPlugin[];\n  configs: Configs;\n}\n\nexport default defineComponent({\n  name: \"PluginsManager\",\n  props: {\n    pluginsmap: String,\n    pluginsjson: String,\n    defaultConfig: Object,\n    pluginManager: Object as () => PluginManager,\n    defaultPlugins: Array as () => Array<string>,\n  },\n  components: {\n    Plugin,\n    draggable: VueDraggableNext,\n  },\n  data(): PluginsManagerData {\n    return {\n      plugins: [],\n      configs: {},\n    };\n  },\n  beforeMount() {\n    this.plugins = this.pluginManager?.getPlugins() || [];\n    //this.importPlugin(\"local\", \"http://localhost:3002/remoteEntry.js\");\n  },\n  methods: {\n    changeEnabled(name: string, enabled: boolean) {\n      let plugin = this.plugins.find((o: any) => o.name === name);\n      if (plugin) {\n        plugin.enabled = enabled;\n        this.change();\n      }\n    },\n    changeConfig(name: string, config: Object) {\n      let plugin = this.plugins.find((o: LennaPlugin) => o.name === name);\n      if (plugin) {\n        plugin.config = config;\n      }\n      this.change();\n    },\n    change() {\n      this.$emit(\"change\");\n    },\n    raw(comp: any) {\n      return comp;\n    },\n  },\n});\n","import { render } from \"./PluginsManager.vue?vue&type=template&id=fe653878&scoped=true\"\nimport script from \"./PluginsManager.vue?vue&type=script&lang=ts\"\nexport * from \"./PluginsManager.vue?vue&type=script&lang=ts\"\n\nimport \"./PluginsManager.vue?vue&type=style&index=0&id=fe653878&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-fe653878\"\n\nexport default script","<template>\n  <div class=\"about\">\n    <h1>About Lenna Project</h1>\n    <p>\n      Lenna is a library for image processing algorithms. The web page allows to\n      test and use them.\n    </p>\n    <Help />\n    <h2>Thanks</h2>\n      <ul>\n        <li>Silvia (<a href=\"https://github.com/silvia-odwyer/photon\">photon</a>)</li>\n      </ul>\n    <h2>Plugins</h2>\n    <p>\n      Lenna allows to plug in more algorithms. \n      The plugins can be activated for use in the <a href=\"https://lenna.app/marketplace/\">marketplace</a>. \n      Some examples can be found at\n      <a href=\"https://github.com/lenna-project/lenna-plugins\"\n        >lenna-project/lenna-plugins</a\n      >\n      on github.\n      <br/>\n      Following a list of available plugins:\n\n      <ul>\n      <li><b>blur</b> - Blurs the image. The strength can be configured.</li>\n      <li><b>dramatic</b> - Gives the image a dramatic touch.</li>\n      <li><b>exif</b> - Allows to clear exif data of the image.</li>\n      <li><b>rotate</b> - Rotates the image.</li>\n      <li><b>canny</b> - Shows edges of objects in the image.</li>\n      </ul>\n    </p>\n        \n    <h2>Jupyter Notebooks</h2>\n    View some notebooks <a href=\"/jupyter\">here</a> to see how the plugins can be used in python.\n    \n    <h2>Command Line Interface</h2>\n    <iframe src=\"https://snapcraft.io/lenna-cli/embedded?button=black&summary=true\" frameborder=\"0\" width=\"100%\" height=\"380px\" style=\"border: 1px solid #CCC; border-radius: 2px;\"></iframe>\n    <p>\n      A command line interface allows to use the algorithms and run them on\n      multiple images at once. The source for\n      <a href=\"https://github.com/lenna-project/lenna-cli\">lenna-cli</a>\n      can be found on github.\n    </p>\n    <img src=\"https://raw.githubusercontent.com/lenna-project/lenna-cli/main/docs/images/run.gif\" />\n\n    <h2>Desktop App</h2>\n    <a href=\"https://sourceforge.net/projects/lenna/files/latest/download\"><img alt=\"Download lenna\" src=\"https://a.fsdn.com/con/app/sf-download-button\" width=276 height=48 srcset=\"https://a.fsdn.com/con/app/sf-download-button?button_size=2x 2x\"></a>\n    <br />\n    <iframe src=\"https://snapcraft.io/lenna/embedded?button=black&summary=true&screenshot=true\" frameborder=\"0\" width=\"100%\" height=\"620px\" style=\"border: 1px solid #CCC; border-radius: 2px;\"></iframe>\n\n    <h2>Desktop Web App</h2>\n    <a href=\"https://github.com/lenna-project/lenna-gui/releases/latest\">Lenna GUI</a>\n    This App supports convertion of images in folders.\n    <br />\n    You can find installers for Mac, Linux and Windows.\n    <br />\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Help from \"../components/Help.vue\";\n\nexport default {\n  name: \"About\",\n  components: {\n    Help,\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.about {\n  padding: 100px;\n  padding-left: 30%;\n  background-color: $body_background;\n  height: 100%;\n}\n</style>\n","import { render } from \"./About.vue?vue&type=template&id=5155017c&scoped=true\"\nimport script from \"./About.vue?vue&type=script&lang=ts\"\nexport * from \"./About.vue?vue&type=script&lang=ts\"\n\nimport \"./About.vue?vue&type=style&index=0&id=5155017c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-5155017c\"\n\nexport default script","\nimport Help from \"../components/Help.vue\";\n\nexport default {\n  name: \"About\",\n  components: {\n    Help,\n  },\n};\n","import { render } from \"./Batch.vue?vue&type=template&id=caf8c916&scoped=true\"\nimport script from \"./Batch.vue?vue&type=script&lang=ts\"\nexport * from \"./Batch.vue?vue&type=script&lang=ts\"\n\nimport \"./Batch.vue?vue&type=style&index=0&id=caf8c916&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-caf8c916\"\n\nexport default script","import { render } from \"./Home.vue?vue&type=template&id=776d1843&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=776d1843&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-776d1843\"\n\nexport default script","<template>\n  <div class=\"image-preview\">\n    <div id=\"save\">\n      <select v-model=\"filetype\">\n        <option\n          v-for=\"option in options\"\n          :value=\"option.value\"\n          :key=\"option.text\"\n        >\n          {{ option.text }}\n        </option>\n      </select>\n      <p v-on:click=\"downloadZip\">save files</p>\n    </div>\n    <br />\n    <div v-if=\"imgs.length > 0\" class=\"image-container\">\n      <div\n        v-for=\"(src, index) in imgs\"\n        :key=\"index\"\n        class=\"pic\"\n        @click=\"() => showImg(index)\"\n      >\n        <img height=\"140\" :src=\"src\" />\n      </div>\n    </div>\n    <vue-easy-lightbox\n      escDisabled\n      moveDisabled\n      :visible=\"visible\"\n      :imgs=\"imgs\"\n      :index=\"index\"\n      @hide=\"handleHide\"\n    ></vue-easy-lightbox>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { useToast } from \"vue-toastification\";\nimport { convert } from \"@lenna-proj/lenna-cli\";\nimport { ImageSource } from \"../models/image\";\n\ndeclare interface FileOption {\n  text: string;\n  value: string;\n}\n\ndeclare interface ImagePreviewData {\n  imgs: string[];\n  visible: boolean;\n  index: number;\n  filetype: string;\n  options: Array<FileOption>;\n}\n\nexport default defineComponent({\n  components: {\n    VueEasyLightbox,\n  },\n  props: {\n    images: {\n      type: Array as () => Array<ImageSource>,\n      required: true,\n    },\n  },\n  data(): ImagePreviewData {\n    return {\n      imgs: [],\n      visible: false,\n      index: 0,\n      filetype: \"png\",\n      options: [\n        { text: \"png\", value: \"png\" },\n        { text: \"jpg\", value: \"jpg\" },\n        { text: \"bmp\", value: \"bmp\" },\n        { text: \"ico\", value: \"ico\" },\n        { text: \"gif\", value: \"gif\" },\n      ],\n    };\n  },\n  methods: {\n    createObjectURL(image: ImageSource) {\n      return URL.createObjectURL(image);\n    },\n    async safeImage(file: any, format: string) {\n      let data = await file\n        .arrayBuffer()\n        .then((image: any) => new Uint8Array(image));\n      return convert(data, format);\n    },\n    async downloadZip() {\n      let zip = new JSZip();\n      const toast = useToast();\n      const imageCount = this.images.length;\n      if (imageCount < 1) {\n        return;\n      }\n      let compressedCount = 0;\n      toast.info(`compressing of ${this.images.length} images started`);\n      let promises = this.images.map((image: ImageSource) => {\n        let type = `image/${this.filetype}`;\n\n        return this.safeImage(image, this.filetype).then(\n          (compressed_image) => {\n            let file = new File([compressed_image], image.name, { type });\n            compressedCount++;\n            toast.success(\n              `compressed ${image.name} ${compressedCount} / ${imageCount} images`\n            );\n            return zip.file(\n              `${image.name.replace(/(\\.[^/.]+)+$/, \"\")}.${this.filetype}`,\n              file\n            );\n          }\n        );\n      });\n      await Promise.all(promises);\n      zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n        saveAs(blob, \"images.zip\");\n      });\n    },\n    show() {\n      this.visible = true;\n    },\n    showImg(index: any) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n  watch: {\n    $props: {\n      handler() {\n        this.imgs = [];\n        this.index = 0;\n        this.images.forEach((image) => {\n          this.imgs.push(this.createObjectURL(image));\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.image-preview {\n  margin: 10px;\n  width: 300px;\n  height: 350px;\n  background-color: $background_color;\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: 10px 5px 5px $shadow;\n  align-items: center;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.image-container {\n  height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: auto;\n}\n#save {\n  text-transform: uppercase;\n  font-size: 14pt;\n  cursor: pointer;\n  margin: 10px;\n}\n#save:hover {\n  transform: scale(1.05);\n}\n#save select {\n  height: 40px;\n  min-width: 60px;\n  color: $text_color;\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 16px;\n  cursor: pointer;\n  box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.3);\n  border-radius: 3px;\n  outline: none;\n  background-color: white;\n}\n</style>\n","<template>\n  <div class=\"image-preview\">\n    <FileUpload\n      :multiple=\"true\"\n      :drop=\"true\"\n      :drop-directory=\"true\"\n      extensions=\"gif,jpg,jpeg,png,webp\"\n      accept=\"image/png,image/gif,image/jpeg,image/webp\"\n      @input-filter=\"inputFilter\"\n      @input-file=\"inputFile\"\n      ref=\"upload\"\n      class=\"file-upload\"\n    >\n      drop or select image</FileUpload\n    >\n    <div id=\"save\">\n      <select v-model=\"filetype\">\n        <option\n          v-for=\"option in options\"\n          :value=\"option.value\"\n          :key=\"option.text\"\n        >\n          {{ option.text }}\n        </option>\n      </select>\n      <p v-on:click=\"downloadZip\">save image</p>\n    </div>\n    <br />\n    <div v-if=\"imgs.length > 0\" class=\"image-container\">\n      <div\n        v-for=\"(src, index) in imgs\"\n        :key=\"index\"\n        class=\"pic\"\n        @click=\"() => showImg(index)\"\n      >\n        <img max-height=\"800\" :src=\"src\" />\n      </div>\n    </div>\n    <vue-easy-lightbox\n      escDisabled\n      moveDisabled\n      :visible=\"visible\"\n      :imgs=\"imgs\"\n      :index=\"index\"\n      @hide=\"handleHide\"\n    ></vue-easy-lightbox>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport FileUpload from \"vue-upload-component\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { useToast } from \"vue-toastification\";\nimport { convert } from \"@lenna-proj/lenna-cli\";\nimport { ImageSource } from \"../models/image\";\n\ndeclare interface FileOption {\n  text: string;\n  value: string;\n}\n\ndeclare interface ImageUploadPreviewData {\n  files: Object[];\n  imgs: string[];\n  visible: boolean;\n  index: number;\n  filetype: string;\n  options: Array<FileOption>;\n}\n\nexport default defineComponent({\n  components: {\n    FileUpload,\n    VueEasyLightbox,\n  },\n  props: {\n    images: {\n      type: Array as () => Array<ImageSource>,\n      required: true,\n    },\n  },\n  data(): ImageUploadPreviewData {\n    return {\n      files: [],\n      imgs: [],\n      visible: false,\n      index: 0,\n      filetype: \"png\",\n      options: [\n        { text: \"png\", value: \"png\" },\n        { text: \"jpg\", value: \"jpg\" },\n        { text: \"bmp\", value: \"bmp\" },\n        { text: \"ico\", value: \"ico\" },\n        { text: \"gif\", value: \"gif\" },\n      ],\n    };\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    inputFile(newFile: any, oldFile: any, prevent: any) {\n      //this.images.push(newFile.url);\n      this.imgs = [newFile.url];\n      this.$emit(\"changeImage\", newFile);\n    },\n    inputFilter(newFile: any, oldFile: any, prevent: any) {\n      if (newFile && !oldFile) {\n        if (!/\\.(gif|jpg|jpeg|png|webp)$/i.test(newFile.name)) {\n          alert(\"Your choice is not a picture\");\n          return prevent();\n        }\n      }\n      if (newFile && (!oldFile || newFile.file !== oldFile.file)) {\n        newFile.url = \"\";\n        let URL = window.URL || window.webkitURL;\n        if (URL && URL.createObjectURL) {\n          newFile.url = URL.createObjectURL(newFile.file);\n        }\n      }\n    },\n    createObjectURL(image: ImageSource) {\n      return URL.createObjectURL(image);\n    },\n    async safeImage(file: any, format: string) {\n      let data = await file\n        .arrayBuffer()\n        .then((image: any) => new Uint8Array(image));\n      return convert(data, format);\n    },\n    async downloadZip() {\n      let zip = new JSZip();\n      const toast = useToast();\n      const imageCount = this.images.length;\n      if (imageCount < 1) {\n        return;\n      }\n      let compressedCount = 0;\n      toast.info(`compressing of ${this.images.length} images started`);\n      let promises = this.images.map((image: ImageSource) => {\n        let type = `image/${this.filetype}`;\n\n        return this.safeImage(image, this.filetype).then((compressed_image) => {\n          let file = new File([compressed_image], image.name, { type });\n          compressedCount++;\n          toast.success(\n            `compressed ${image.name} ${compressedCount} / ${imageCount} images`\n          );\n          return zip.file(\n            `${image.name.replace(/(\\.[^/.]+)+$/, \"\")}.${this.filetype}`,\n            file\n          );\n        });\n      });\n      await Promise.all(promises);\n      zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n        saveAs(blob, \"images.zip\");\n      });\n    },\n    show() {\n      this.visible = true;\n    },\n    showImg(index: any) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n  watch: {\n    $props: {\n      handler() {\n        this.imgs = [];\n        this.index = 0;\n        this.images.forEach((image) => {\n          this.imgs = [this.createObjectURL(image)];\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.image-upload {\n  margin: 10px;\n  width: 300px;\n  height: 350px;\n  background-color: $background_color;\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: 10px 5px 5px $shadow;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.file-upload {\n  text-transform: uppercase;\n  font-size: 14pt;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.file-upload:hover {\n  transform: scale(1.05);\n}\n.image-preview {\n  margin: 10px;\n  width: 800px;\n  height: 600px;\n  background-color: $background_color;\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: 10px 5px 5px $shadow;\n  align-items: center;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.image-container {\n  height: 600px;\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: auto;\n}\n#save {\n  text-transform: uppercase;\n  font-size: 14pt;\n  cursor: pointer;\n  margin: 10px;\n}\n#save:hover {\n  transform: scale(1.05);\n}\n#save select {\n  height: 40px;\n  min-width: 60px;\n  color: $text_color;\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 16px;\n  cursor: pointer;\n  box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.3);\n  border-radius: 3px;\n  outline: none;\n  background-color: white;\n}\n</style>\n","<template>\n  <div>\n    <Slide>\n      <button v-on:click=\"loadPlugin(pluginUrl)\">add plugin</button>\n      <input\n        v-model=\"pluginUrl\"\n        placeholder=\"https://lenna.app/lenna-plugins/desaturate/remoteEntry.js\"\n      />\n      <br />\n      <ConfigComp v-if=\"pluginsManager\" :plugins=\"pluginsManager.plugins\" />\n      <Help />\n    </Slide>\n    <div class=\"main\">\n      <h1>Convert images online without upload of your data</h1>\n      <h2 v-if=\"just\">{{ just }}</h2>\n      <div class=\"top_main\">\n        <ImageUpload\n          class=\"v-step-3\"\n          ref=\"imageUpload\"\n          @changeImage=\"changeImages($event)\"\n        />\n        <div id=\"process\">\n          <button class=\"v-step-5\" v-on:click=\"processImages\">\n            process images\n          </button>\n        </div>\n        <ImagePreview class=\"v-step-6\" :images=\"resultImages\" />\n      </div>\n      <div class=\"bottom_main\">\n        <PluginsManager\n          class=\"v-step-4\"\n          ref=\"pluginsManager\"\n          :pluginManager=\"pluginManager\"\n          :defaultConfig=\"defaultConfig\"\n          :defaultPlugins=\"defaultPlugins\"\n        />\n      </div>\n      <div id=\"line\">\n        <hr />\n        <div class=\"plus radius\" v-on:click=\"onMorePlugins()\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\nimport * as NProgress from \"nprogress\";\nimport { Slide } from \"vue3-burger-menu\";\nimport { useToast } from \"vue-toastification\";\nimport PluginsManager from \"../components/PluginsManager.vue\";\nimport ImageUpload from \"../components/ImageUpload.vue\";\nimport ImagePreview from \"../components/ImagePreview.vue\";\nimport ConfigComp from \"../components/ConfigComp.vue\";\nimport Help from \"../components/Help.vue\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\nimport { Image } from \"../models/image\";\nimport { processImages } from \"../controllers/processor\";\nimport { listPlugins } from \"../controllers/storage\";\n\nexport declare interface BatchData {\n  pluginUrl: string;\n  just: string | null;\n  defaultConfig: [];\n  defaultPlugins: string[];\n  sourceImages: Image[];\n  resultImages: Image[];\n  pluginManager: PluginManager;\n}\n\nexport default defineComponent({\n  name: \"Batch\",\n  components: {\n    Slide,\n    PluginsManager,\n    ImageUpload,\n    ImagePreview,\n    ConfigComp,\n    Help,\n  },\n  data(): BatchData {\n    return {\n      pluginUrl: \"\",\n      just: null,\n      defaultConfig: [],\n      defaultPlugins: [],\n      sourceImages: [],\n      resultImages: [],\n      pluginManager: new PluginManager(\"\"),\n    };\n  },\n  setup: () => {\n    const imageUpload = ref(ImageUpload);\n    const pluginsManager = ref(PluginsManager);\n    return {\n      imageUpload,\n      pluginsManager,\n    };\n  },\n  created() {\n    if (this.$route.query[\"config\"]) {\n      this.defaultConfig = JSON.parse(\n        // eslint-disable-next-line no-undef\n        Buffer.from(this.$route.query[\"config\"].toString(), \"base64\").toString(\n          \"binary\"\n        )\n      );\n      console.log(this.defaultConfig);\n    }\n    if (this.$route.query.plugin) {\n      this.defaultPlugins = [this.$route.query.plugin.toString()];\n    }\n    if (this.$route.query.just) {\n      this.pluginManager.filter = this.$route.query.just.toString();\n      this.just = this.$route.query.just.toString();\n    }\n    this.loadDefaultPluginsMap();\n    this.loadDefaultPluginJson();\n    this.loadAddedPlugins();\n  },\n  methods: {\n    loadPlugin(pluginUrl: string) {\n      console.log(\"loaded plugin: \", pluginUrl);\n      this.pluginManager.importPlugin(pluginUrl, pluginUrl);\n    },\n\n    loadDefaultPluginsMap() {\n      this.pluginManager.importPluginMap(\n        \"https://lenna.app/lenna-plugins/importmap.json\"\n      );\n    },\n    loadDefaultPluginJson() {\n      this.pluginManager.importPluginsJson(\n        \"https://lenna.app/lenna-plugins/plugins.json\"\n      );\n    },\n    loadAddedPlugins() {\n      listPlugins().forEach((plugin) => {\n        this.pluginManager.importPlugin(plugin, plugin);\n      });\n    },\n    onMorePlugins() {\n      window.location.replace(\"/marketplace\");\n    },\n    changeImages(files: any) {\n      this.sourceImages.push(files.file);\n    },\n    async processImages() {\n      NProgress.configure({ parent: \"#process\" });\n      NProgress.start();\n      const toast = useToast();\n\n      await processImages(\n        this.sourceImages,\n        this.resultImages,\n        this.pluginManager.getPlugins(),\n        {\n          info: (message: string) => {\n            toast.info(message);\n          },\n          success: (message: string) => {\n            toast.success(message);\n          },\n        },\n        NProgress.set\n      );\n\n      this.imageUpload.images = [];\n      this.sourceImages = [];\n\n      NProgress.done();\n      NProgress.remove();\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n@import \"//unpkg.com/nprogress@0.2.0/nprogress.css\";\n@import url(\"https://fonts.googleapis.com/css2?family=Amatic+SC&display=swap\");\n\n.main {\n  background-color: $body_background;\n  padding: 150px;\n  padding-top: 120px;\n  text-align: center;\n}\n.main h1 {\n  text-transform: uppercase;\n  font-family: \"Amatic SC\", cursive;\n  font-size: 32pt;\n}\n.main hr {\n  margin-top: 10px;\n  border: none;\n  border-top: 2px dotted blue;\n  color: #fff;\n  background-color: #fff;\n  height: 2px;\n  width: 100%;\n}\n.top_main {\n  display: flex;\n  justify-content: space-between;\n}\n.bottom_main {\n  padding-top: 20px;\n  padding-bottom: 0;\n}\n#process button {\n  margin-top: 40%;\n  width: 350px;\n  align-self: center;\n  font-size: 20pt;\n  text-transform: uppercase;\n  padding: 12px;\n  border-radius: 30px;\n  border: none;\n  box-shadow: 5px 5px 5px $shadow;\n}\n#process button:hover {\n  transform: scale(1.05);\n}\n#line {\n  margin-top: 50px;\n  position: relative;\n}\n\n.plus {\n  position: absolute;\n  top: -25px;\n  left: calc(50% - 20px);\n\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n\n  background: linear-gradient(#fff, #fff), linear-gradient(#fff, #fff), blue;\n  background-position: center;\n  background-size: 50% 2px, 2px 50%; /*thickness = 2px, length = 50% (25px)*/\n  background-repeat: no-repeat;\n}\n.radius {\n  border-radius: 50%;\n}\n.plus:hover {\n  transform: scale(1.1);\n}\n\n@media screen and (max-width: 800px) {\n  .main {\n    margin-top: 120px;\n    padding: 0;\n  }\n  #process button {\n    width: 150px;\n  }\n}\n</style>\n","<template>\n  <div>\n    <Slide>\n      <button v-on:click=\"loadPlugin(pluginUrl)\">add plugin</button>\n      <input\n        v-model=\"pluginUrl\"\n        placeholder=\"https://lenna.app/lenna-plugins/desaturate/remoteEntry.js\"\n      />\n      <br />\n      <ConfigComp v-if=\"pluginsManager\" :plugins=\"pluginsManager.plugins\" />\n      <Help />\n    </Slide>\n    <div class=\"main\">\n      <h1>Convert images online without upload of your data</h1>\n      <h2 v-if=\"just\">{{ just }}</h2>\n      <div id=\"process\" class=\"top_main\">\n        <ImageUploadPreview\n          :images=\"resultImages\"\n          @changeImage=\"changeImages($event)\"\n        />\n      </div>\n      <div class=\"bottom_main\">\n        <PluginsManager\n          class=\"v-step-4\"\n          ref=\"pluginsManager\"\n          :pluginManager=\"pluginManager\"\n          :defaultConfig=\"defaultConfig\"\n          :defaultPlugins=\"defaultPlugins\"\n          @change=\"processImages()\"\n        />\n      </div>\n      <div id=\"line\">\n        <hr />\n        <div class=\"plus radius\" v-on:click=\"onMorePlugins()\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\nimport * as NProgress from \"nprogress\";\nimport { Slide } from \"vue3-burger-menu\";\nimport { useToast } from \"vue-toastification\";\nimport PluginsManager from \"../components/PluginsManager.vue\";\nimport ImageUploadPreview from \"../components/ImageUploadPreview.vue\";\nimport ConfigComp from \"../components/ConfigComp.vue\";\nimport Help from \"../components/Help.vue\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\nimport { Image, ImageSource } from \"../models/image\";\nimport { processImages } from \"../controllers/processor\";\nimport { listPlugins } from \"../controllers/storage\";\n\nexport declare interface HomeData {\n  pluginUrl: string;\n  just: string | null;\n  defaultConfig: [];\n  defaultPlugins: string[];\n  sourceImages: Image[];\n  resultImages: ImageSource[];\n  pluginManager: PluginManager;\n}\n\nexport default defineComponent({\n  name: \"Home\",\n  components: {\n    Slide,\n    PluginsManager,\n    ImageUploadPreview,\n    ConfigComp,\n    Help,\n  },\n  data(): HomeData {\n    return {\n      pluginUrl: \"\",\n      just: null,\n      defaultConfig: [],\n      defaultPlugins: [],\n      sourceImages: [],\n      resultImages: [],\n      pluginManager: new PluginManager(\"\"),\n    };\n  },\n  setup: () => {\n    const pluginsManager = ref(PluginsManager);\n    return {\n      pluginsManager,\n    };\n  },\n  created() {\n    if (this.$route.query[\"config\"]) {\n      this.defaultConfig = JSON.parse(\n        // eslint-disable-next-line no-undef\n        Buffer.from(this.$route.query[\"config\"].toString(), \"base64\").toString(\n          \"binary\"\n        )\n      );\n      console.log(this.defaultConfig);\n    }\n    if (this.$route.query.plugin) {\n      this.defaultPlugins = [this.$route.query.plugin.toString()];\n    }\n    if (this.$route.query.just) {\n      this.pluginManager.filter = this.$route.query.just.toString();\n      this.just = this.$route.query.just.toString();\n    }\n    this.loadDefaultPluginsMap();\n    this.loadDefaultPluginJson();\n    this.loadAddedPlugins();\n  },\n  methods: {\n    loadPlugin(pluginUrl: string) {\n      console.log(\"loaded plugin: \", pluginUrl);\n      this.pluginManager.importPlugin(pluginUrl, pluginUrl);\n    },\n\n    loadDefaultPluginsMap() {\n      this.pluginManager.importPluginMap(\n        \"https://lenna.app/lenna-plugins/importmap.json\"\n      );\n    },\n    loadDefaultPluginJson() {\n      this.pluginManager.importPluginsJson(\n        \"https://lenna.app/lenna-plugins/plugins.json\"\n      );\n    },\n    loadAddedPlugins() {\n      listPlugins().forEach((plugin) => {\n        this.pluginManager.importPlugin(plugin, plugin);\n      });\n    },\n    onMorePlugins() {\n      window.location.replace(\"/marketplace\");\n    },\n    changeImages(files: any) {\n      this.sourceImages = [files.file];\n      this.processImages();\n    },\n    async processImages() {\n      NProgress.configure({ parent: \"#process\" });\n      NProgress.start();\n\n      await processImages(\n        this.sourceImages,\n        this.resultImages,\n        this.pluginManager.getPlugins(),\n        {\n          info: (message: string) => {},\n          success: (message: string) => {},\n        },\n        NProgress.set\n      );\n      NProgress.done();\n      NProgress.remove();\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n@import \"//unpkg.com/nprogress@0.2.0/nprogress.css\";\n@import url(\"https://fonts.googleapis.com/css2?family=Amatic+SC&display=swap\");\n\n.main {\n  background-color: $body_background;\n  padding: 150px;\n  padding-top: 120px;\n  text-align: center;\n}\n.main h1 {\n  text-transform: uppercase;\n  font-family: \"Amatic SC\", cursive;\n  font-size: 32pt;\n}\n.main hr {\n  margin-top: 10px;\n  border: none;\n  border-top: 2px dotted blue;\n  color: #fff;\n  background-color: #fff;\n  height: 2px;\n  width: 100%;\n}\n.top_main {\n  display: flex;\n  justify-content: center;\n}\n.bottom_main {\n  padding-top: 20px;\n  padding-bottom: 0;\n}\n#process button {\n  margin-top: 40%;\n  width: 350px;\n  align-self: center;\n  font-size: 20pt;\n  text-transform: uppercase;\n  padding: 12px;\n  border-radius: 30px;\n  border: none;\n  box-shadow: 5px 5px 5px $shadow;\n}\n#process button:hover {\n  transform: scale(1.05);\n}\n#line {\n  margin-top: 50px;\n  position: relative;\n}\n\n.plus {\n  position: absolute;\n  top: -25px;\n  left: calc(50% - 20px);\n\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n\n  background: linear-gradient(#fff, #fff), linear-gradient(#fff, #fff), blue;\n  background-position: center;\n  background-size: 50% 2px, 2px 50%; /*thickness = 2px, length = 50% (25px)*/\n  background-repeat: no-repeat;\n}\n.radius {\n  border-radius: 50%;\n}\n.plus:hover {\n  transform: scale(1.1);\n}\n\n@media screen and (max-width: 800px) {\n  .main {\n    margin-top: 120px;\n    padding: 0;\n  }\n  #process button {\n    width: 150px;\n  }\n}\n</style>\n"],"names":["defineComponent","components","VueEasyLightbox","props","images","type","Array","required","data","imgs","visible","index","filetype","options","text","value","methods","createObjectURL","image","URL","safeImage","file","format","arrayBuffer","then","Uint8Array","downloadZip","zip","toast","imageCount","this","length","compressedCount","info","promises","map","compressed_image","File","name","success","replace","Promise","all","generateAsync","blob","saveAs","show","showImg","handleHide","watch","$props","handler","forEach","push","deep","immediate","FileUpload","files","inputFile","newFile","oldFile","prevent","url","$emit","inputFilter","test","alert","window","webkitURL","Slide","PluginsManager","ImageUpload","ImagePreview","ConfigComp","Help","pluginUrl","just","defaultConfig","defaultPlugins","sourceImages","resultImages","pluginManager","setup","imageUpload","ref","pluginsManager","created","$route","query","JSON","parse","Buffer","from","toString","console","log","plugin","filter","loadDefaultPluginsMap","loadDefaultPluginJson","loadAddedPlugins","loadPlugin","importPlugin","importPluginMap","importPluginsJson","onMorePlugins","location","changeImages","processImages","parent","getPlugins","message","ImageUploadPreview","createApp","use","position","mount","configs","plugins","key","System","import","module","init","__webpack_require__","S","get","importModule","pluginConfig","enabled","config","includes","mapUrl","tasks","fetch","json","imports","jsonUrl","changeConfig","find","o","logger","progressCallback","convertedCount","sourceImage","processImage","imageFile","progress","img","process","saveConfig","localStorage","setItem","stringify","loadConfig","savedConfig","getItem","Object","assign","loadConfigFromParams","params","listPlugins","routes","path","component","createRouter","history","createWebHistory","class","_createElementVNode","id","src","_imports_0","href","_createElementBlock","_hoisted_2","_createVNode","_component_router_link","to","_hoisted_5","_component_v_footer","_toDisplayString","Date","getFullYear","_hoisted_3","Navbar","Footer","_component_Navbar","_component_router_view","_component_Footer","base64config","download","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","generateConfigUrlBase64","btoa","generateBase64Config","generateLennaConfig","lenna_yml","pipeline","generateYamlConfig","_ctx","onClick","$event","readonly","script","_hoisted_4","_component_FileUpload","multiple","drop","extensions","accept","onInputFilter","onInputFile","_Fragment","_renderList","height","_component_vue_easy_lightbox","escDisabled","moveDisabled","onHide","updateConfig","c","placeholder","onChange","checked","Boolean","emits","computed","set","onInput","event","target","String","Checkbox","Icon","PluginConfig","ui","shallowRef","icon","processor","keyCounter","pluginKey","loadDefaultConfig","loadUI","widget","default","catch","e","updateEnabled","_createBlock","_component_Icon","_component_Checkbox","_cache","description","_resolveDynamicComponent","onChangeConfig","_component_PluginConfig","pluginsmap","pluginsjson","Plugin","draggable","beforeMount","changeEnabled","change","raw","comp","_component_draggable","list","item","_component_Plugin","onChangeEnabled","frameborder","width","alt","srcset","_component_Help","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_25","option","_component_Slide","_hoisted_1","_component_ConfigComp","_component_ImageUpload","onChangeImage","_component_ImagePreview","_component_PluginsManager","_hoisted_9","_component_ImageUploadPreview","_hoisted_8"],"sourceRoot":""}